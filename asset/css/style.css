
/* Asterisk wildcard selector to override default styles added by the browser */
* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

/* General styles */
body {
	min-height: 100vh;
	display: flex;
}

/* header */
header {
    background-color: #ffffff;
    padding: 0 1rem;
    position: fixed;
    z-index: 99;
    width: 100%;
    box-shadow: 0 2px 2px #3a3a3a;
    display: flex;
    justify-content: space-between;
    align-items: baseline;
}

.navbar,
.navbar ul {
	/* 三个元素都需要弹性布局 写一块 */
	display: flex;
	justify-content: center;
	align-items: center;
}
.navbar {
	/* 相对定位 */
	position: relative;
	padding: 20px;
	border-radius: 50px;
	background-color: #fff;
}
.navbar input {
	width: 40px;
	height: 40px;
	/* 鼠标移入变小手 */
	cursor: pointer;
	/* 不透明度为0 直接变透明 */
	opacity: 0;
}
.navbar span {
	/* 绝对定位 */
	position: absolute;
	left: 25px;
	/* 现将两条线都放到一起 然后单独设置第二条线的位置 calc方法可以自动计算数值 */
	top: calc(50% - 10px);
	width: 30px;
	height: 4px;
	border-radius: 15px;
	background-color: #999;
	/* 这里在解决一个问题 现在span覆盖着复选框 我们鼠标放到span点不中复选框  写这个属性就能解决这个问题 即便鼠标放到span上点击也能够选中或者未选中复选框*/
	pointer-events: none;
	/* 收回来的时候过渡刚好相反 */
	transition: transform 0.3s ease-in-out, top 0.3s ease-in-out 0.3s;
}
/* 因为第二条线在navbar这个元素内的第三个位置 所以这里写3 */
.navbar span:nth-child(3) {
	top: calc(50% + 6px);
}
.navbar ul {
	width: 0;
	/* 溢出隐藏 */
	overflow: hidden;
	/* 现在这个盒子是扁的 待会解决这个问题 */
	/* 这个问题出现的原因是 文字被换行显示了 两个汉字竖着排列了 就撑大盒子了 */
	/* 这个属性可以让文字就在一行排列 不换行 */
	white-space: nowrap;
	transition: all 0.5s;
}
.navbar ul li {
	list-style: none;
	margin: 0 15px;
}
.navbar ul li a {
	/* 取消下划线 */
	text-decoration: none;
	font-size: 20px;
	font-weight: 700;
	color: #333;
}
.navbar ul li a:hover {
	color: #fb7299;
}
/* :checked是当选中的复选框的时候 ~ 是兄弟选择器 查找同一级的ul */
.navbar input:checked ~ ul {
	width: 350px;
}
.navbar input:checked ~ span:nth-child(2) {
	top: calc(50% - 2px);
	transform: rotate(-45deg);
	background-color: #fb7299;
	/* 现在速度太快了 加个过渡 */
	/* 这是先执行top 然后.3s后执行transform */
	transition: top 0.3s ease-in-out, transform 0.3s ease-in-out 0.3s;
}
.navbar input:checked ~ span:nth-child(3) {
	top: calc(50% - 2px);
	transform: rotate(45deg);
	background-color: #fb7299;
	transition: top 0.3s ease-in-out, transform 0.3s ease-in-out 0.3s;
}



/* Main section */
main {
    /* Make main element take up any surplus space to push footer down */
    flex: 1 0 auto;
    /* Add margin at the top to prevent content from being covered by the header */
    margin-top: 47px;
    /* Enable flex properties for child elements */
    display: flex;
    flex-direction: column;
}


/* Hero image slide start */

.carousel_map {
	width: 100vw;
	max-height: 400px;
	display:flex	
}

.slide {
	width: inherit;
	height: inherit;
	overflow: hidden;
	position: relative;
}

/* When hover on the image, button will appear */
.slide:hover .labels {
	display: flex;
}

/* When hover on the slide, animation will stop */
.slide:hover .list {
	animation: none;
}

/* Hide the radio button */
.slide input {
	display: none;
}

/* Position of button */
.labels {
	position: absolute;
	bottom: 0.5em;
	z-index: 1;
	width: inherit;
	justify-content: center;
    /* When hover leave, button will hide */
	display: none;	
}

/* 按钮样式 */
.labels label {
	width: 1rem;
	height: 1rem;
	border-radius: 50%;
	margin: 0 0.3rem;
	border: 0.1rem solid #fff;
	background-color: transparent;
	box-sizing: border-box;
	cursor: pointer;
}

/* Button will be colored when checked */
input[id=pic1]:checked ~ .labels label[for=pic1],
input[id=pic2]:checked ~ .labels label[for=pic2],
input[id=pic3]:checked ~ .labels label[for=pic3],
input[id=pic4]:checked ~ .labels label[for=pic4] {
	background-color: #f80000;
	border: 0.1rem solid #fff;
}

/* Choose radio button to choose the image */
input[id=pic1]:checked ~ .list {
	transform: translate(calc(0 * 100vw));
}
input[id=pic2]:checked ~ .list {
	transform: translate(calc(-1 * 100vw));
}	
input[id=pic3]:checked ~ .list {
	transform: translate(calc(-2 * 100vw));
}
input[id=pic4]:checked ~ .list {
	transform: translate(calc(-3 * 100vw));
}

/* remove the bullet point in the list */
ul {
	list-style: none;
}

.list {
	width: calc(5 * 100vw);
	height: inherit;
	position: relative;
	
	/* Animation setting */
    animation-name: move;
    animation-duration: 10s;
    animation-timing-function: ease;
    animation-delay: 1s;
    animation-iteration-count: infinite;
}

@keyframes move {
	0% {
		transform: translate(calc(0 * 100vw));
	}
	25% {
		transform: translate(calc(-1 * 100vw));
	}
	50% {
		transform: translate(calc(-2 * 100vw));
	}
	75% {
		transform: translate(calc(-3 * 100vw));
	}
	100% {
		transform: translate(calc(-4 * 100vw));
	}
}

/* The setting of the image */
.item {
	width: 100vw;
	max-height: 310px;
	float: left;
	object-fit: cover
}
